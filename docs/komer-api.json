{
    "openapi": "3.0.1",
    "info": {
      "title": "Komer API",
      "description": "This is Komer API",
      "contact": {
        "email": "you@your-company.com"
      },
      "license": {
        "name": "Apache 2.0",
        "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
      },
      "version": "1.0.0"
    },
    "servers": [
      {
        "url": "/"
      }
    ],
    "tags": [
      {
        "name": "recipes"
      },
      {
        "name": "users"
      },
      {
        "name": "groups"
      }
    ],
    "paths": {
      "/users": {
        "post": {
          "tags": [
            "users"
          ],
          "summary": "adds a user",
          "description": "Adds a user to the system",
          "operationId": "addUser",
          "requestBody": {
            "description": "User to add",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewUser"
                }
              }
            },
            "required": false
          },
          "responses": {
            "201": {
              "description": "user created",
              "content": {
                "application/json": {
                  "schema": {
                    "required": [
                      "token"
                    ],
                    "type": "object",
                    "properties": {
                      "token": {
                        "type": "string",
                        "format": "uuid"
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Invalid input, object invalid",
              "content": {}
            }
          },
          "x-codegen-request-body-name": "user"
        }
      },
      "/api/poprecipes": {
        "get": {
          "tags": [
            "recipes"
          ],
          "summary": "get the list of most popular recipes",
          "description": "By passing in the appropriate options, you can search for most popular recipes",
          "operationId": "getpoprecipes",
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            },
            {
              "name": "searchString",
              "in": "query",
              "description": "pass an optional search string for looking up jokes with that text",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "skip",
              "in": "query",
              "description": "number of records to skip for pagination",
              "schema": {
                "minimum": 0,
                "type": "integer"
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "maximum number of records to return",
              "schema": {
                "maximum": 50,
                "minimum": 0,
                "type": "integer"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "search results matching criteria",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Recipe"
                    }
                  }
                }
              }
            },
            "400": {
              "description": "bad input parameter",
              "content": {}
            }
          }
        }
      },
      "/api/jokes/{recipeWords}": {
        "get": {
          "tags": [
            "recipes"
          ],
          "summary": "Get a recipe given some words",
          "description": "Get a recipe given some words",
          "operationId": "getRecipeByWords",
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            },
            {
              "name": "recipeWords",
              "in": "path",
              "description": "Words of recipe to be searched",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Recipe"
                  }
                }
              }
            },
            "400": {
              "description": "Invalid words supplied",
              "content": {}
            },
            "404": {
              "description": "Recipe not found",
              "content": {}
            }
          }
        }
      },
      "/api/group":{
        "post":{
            "summary": "creates a new group",
            "description": "Creates a new group with a name and description",
            "operationId": "createGroup",
            "requestBody": {
              "description": "Group to create",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CreateGroup"
                  }
                }
              },
              "required": false
            },
            "responses": {
              "201": {
                "description": "group created",
                "content": {
                  "application/json": {
                    "schema": {
                      "required": [
                        "token"
                      ],
                      "type": "object",
                      "properties": {
                        "token": {
                          "type": "string",
                          "format": "uuid"
                        }
                      }
                    }
                  }
                }
              },
              "400": {
                "description": "Invalid input, object invalid",
                "content": {}
              }
            },
            "x-codegen-request-body-name": "group"
          },
         "put":{

         },
         "get":{

         },
         "delete":{

         } 
          
      },
      "/api/group/{groupID}":{
         "get":{

         },
         "put":{

         },
         "delete":{

         }
      }
      },  

    "components": {
      "schemas": {
        "Recipe": {
          "required": [
            "id",
            "title",
            "userId"
          ],
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "example": 1
            },
            "title": {
              "type": "string",
              "example": "Potatoes and tuna"
            },
            "userId": {
              "type": "integer"
            }
          }
        },
        "CreateGroup": {
          "required": [
            "name",
            "description"
          ],
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "example": "Group1"
            },
            "description":{
                "type": "string",
                "example": "First Group"
            }
          }
        },
        "NewUser": {
            "required": [
              "userName",
              "userID"
            ],
            "type": "object",
            "properties": {
              "userName": {
                "type": "string",
                "example": "joao"
              },
              "userID":{
                  "type": "integer",
                  "example":"88"
              }
            }
          }
      }
    }
}