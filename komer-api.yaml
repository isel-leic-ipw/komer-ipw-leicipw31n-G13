openapi: 3.0.1
info:
  title: Reipes API
  description: This is a simple Recipes API
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
  - description: Localhost server for testing API
    url: http://localhost:1904/api
tags:
- name: recipes
- name: groups
- name: users

paths:
  /recipes:
    get:
      tags:
      - recipes
      summary: Gets the most popular recipes
      description: Gets the most popular recipes
      operationId: getPopRecipes
      responses:
        200:
          description: Fetched the most popular recipes
          content:
            application/json:
              schema:
                type: array
                example: [{ 
                            "id": 715424, 
                            "title": The Best Chili, 
                            "image": https://spoonacular.com/recipeImages/715419-312x231.jpg, 
                            "imageType": jpg
                          },
                          {
                            "id":776505,
                            "title":"Sausage & Pepperoni Stromboli",
                            "image":"https://spoonacular.com/recipeImages/776505-312x231.jpg",
                            "imageType":"jpg"
                          }]  
        404:
          description: The given token doesn't correspond to a known user
          content:
            application/json:
              schema: 
                type: object
                properties:
                  error:
                      type: "string"
                      example: "User Not Found"
  /recipes/word:
    get:
      tags:
      - recipes
      summary: Gets recipes by word
      description: Gets all the recipes that have the word passed as a paremeter in their title
      operationId: getRecipesWithWord
      parameters:
      - name: Word
        in: body
        required: true
        schema:
          type: object
          properties: 
            word: 
              type: string
              example: Spicy
      responses:
        200:
          description: Recipes successfully fetched
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 715419
                  title:
                    type: string
                    example: "Slow Cooker Spicy Hot Wings"
                  image:
                    type: string
                    example: "https://spoonacular.com/recipeImages/715419-312x231.jpg"
                  imageType:
                    type: string
                    example: "jpg"
        400:
          description: The parameter is wrongfully passed
          content: 
            application/json:
              schema:
                  type: object
                  properties: 
                    error:
                      type: "string"
                      example: "Invalid {parameter}"
        404:
          description: One of the parameters doesn't correctly correspond
          content:
            application/json:
              schema: 
                type: object
                properties:
                  error:
                      type: "string"
                      example: "{parameter} Not Found"
  /groups:
    post:
      tags:
      - groups
      summary: Creates a new group
      description: Creates a new group with the parameters passed in the body
      operationId: createGroup
      parameters:
      - name: name
        in: body
        required: true
        schema:
          type: object
          properties: 
            name: 
              type: string
              example: Group3
      - name: description
        in: body
        required: true
        schema:
          type: object
          properties: 
            description:
              type: string
              example: Description of Group3
      responses:
        200:
          description: Group successfully created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 3
                  name:
                    type: string
                    example: "Group3"
                  description:
                    type: string
                    example: "Description of Group3"
                  recipes:
                    type: array
                    example: []
        400:
          description: One of the parameters is wrongfully passed
          content: 
            application/json:
              schema:
                  type: object
                  properties: 
                    error:
                      type: "string"
                      example: "Invalid {parameter}"
        404:
          description: The given token doesn't correspond to a known user
          content:
            application/json:
              schema: 
                type: object
                properties:
                  error:
                      type: "string"
                      example: "User not found"
    get:
      tags:
      - groups
      summary: Gets all groups of the user
      description: Gets all groups of the user
      operationId: getAllGroups
      responses:
        200:
          description: Successfully got all groups
          content:
            application/json:
              schema:
                type: array
                example: [{
                            "id": 1,
                            "name": "Group1",
                            "description": "Description of Group1",
                            "recipes": []
                          },
                          {
                            "id": 2,
                            "name": "Group2",
                            "description": "Description of Group2",
                            "recipes": []
                          }]
        404:
          description: The given token doesn't correspond to a known user
          content:
            application/json:
              schema: 
                type: object
                properties:
                  error:
                      type: "string"
                      example: "User Not Found"
        404(2):
          description: The user doesn't have any group
          content: 
            application/json:
              schema:
                  type: object
                  properties: 
                    error:
                      type: "string"
                      example: "Groups Not Found"
    delete:
      tags: 
      - groups
      summary: Deletes a group
      description: Deletes the group with id equal to the one passed as a parameter in the body
      operationId: deleteGroup
      parameters:
      - name: id
        in: body
        required: true
        schema:
          type: object
          properties: 
            id: 
              type: integer
              example: 3
      responses:
        200:
          description: Successfully deleted the group
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example:  3
                  name:
                    type: string
                    example: "Group3"
                  description:
                    type: string
                    example: Description of Group3
                  recipes:
                    type: array
                    example: []
        400:
          description: One of the parameters is wrongfully passed
          content: 
            application/json:
              schema:
                  type: object
                  properties: 
                    error:
                      type: "string"
                      example: "Invalid {parameter}"
        401:
          description: The user is unauthorized to delete the given group
          content:
            application/json:
              schema: 
                type: object
                properties:
                  error:
                      type: "string"
                      example: "Unauthorized User"
        404:
          description: One of the parameters doesn't correctly correspond
          content:
            application/json:
              schema: 
                type: object
                properties:
                  error:
                      type: "string"
                      example: "{parameter} Not Found"
    post: 
      tags:
      - groups
      summary: Adds a recipe to a group
      description: Adds the recipe given as a parameter to the group passed as a parameter
      operationId: addRecipeToGroup
      parameters:
      - name: groupId
        in: body
        required: true
        schema:
          type: object
          properties: 
            groupId: 
              type: integer
              example: 3
      - name: recipeId
        in: body
        required: true
        schema:
          type: object
          properties: 
            recipeId:
              type: integer
              example: 715424
      responses:
        200:
          description: Recipe successfully added to group
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 3
                  name:
                    type: string
                    example: "Group3"
                  description:
                    type: string
                    example: "Description of Group3"
                  recipes:
                    type: array
                    example: [{"id": 715424, 
                              "title": "The Best Chili", 
                              "image": "https://spoonacular.com/recipeImages/715424-312x231.jpg", 
                              "imageType": "jpg"}]
        400:
          description: One of the parameters is wrongfully passed
          content: 
            application/json:
              schema:
                  type: object
                  properties: 
                    error:
                      type: "string"
                      example: "Invalid {parameter}"
        401:
          description: The user is unauthorized to add a recipe to the given group
          content:
            application/json:
              schema: 
                type: object
                properties:
                  error:
                      type: "string"
                      example: "Unauthorized User"
        404:
          description: One of the parameters doesn't correctly correspond
          content:
            application/json:
              schema: 
                type: object
                properties:
                  error:
                      type: "string"
                      example: "{parameter} Not Found"
  /groups/edit:
    post:
      tags:
      - groups
      summary: Edits group's parameters
      description: Edits groups's parameters to the one's passed as parameters
      operationId: editGroup
      parameters:
      - name: id
        in: body
        required: true
        schema:
          type: object
          properties: 
            id: 
              type: integer
              example: 1
      - name: name
        in: body
        required: true
        schema:
          type: object
          properties: 
            name: 
              type: string
              example: new name for Group1
      - name: description
        in: body
        required: true
        schema:
          type: object
          properties: 
            description: 
              type: string
              example: new description for Group1
      responses:
        200:
          description: Group successfully edited
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  name:
                    type: string
                    example: new name for Group1
                  description:
                    type: string
                    example: new description for Group1
                  recipes:
                    type: array
                    example: []
        400:
          description: One of the parameters is wrongfully passed
          content: 
            application/json:
              schema:
                  type: object
                  properties: 
                    error:
                      type: "string"
                      example: "Invalid {parameter}"
        401:
          description: The user is unauthorized to edit the given group
          content:
            application/json:
              schema: 
                type: object
                properties:
                  error:
                      type: "string"
                      example: "Unauthorized User"
        404:
          description: One of the parameters doesn't correctly correspond
          content:
            application/json:
              schema: 
                type: object
                properties:
                  error:
                      type: "string"
                      example: "{parameter} Not Found"
  /groups/id: 
    get:
      tags:
      - groups
      summary: Gets the group with the given id
      description: Gets the group with the same id as the one passed as a parameter in the body
      operationId: getGroupById
      parameters:
      - name: id
        in: body
        required: true
        schema:
          type: object
          properties: 
            id: 
              type: integer
              example: 3
      responses:
        200:
          description: Successfully got the group
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example:  3
                  name:
                    type: string
                    example: "Group3"
                  description:
                    type: string
                    example: Description of Group3
                  recipes:
                    type: array
                    example: []
        400:
          description: The id is wrongfully passed
          content: 
            application/json:
              schema:
                  type: object
                  properties: 
                    error:
                      type: "string"
                      example: "Invalid id"
        401:
          description: The user is unauthorized to access the given group
          content:
            application/json:
              schema: 
                type: object
                properties:
                  error:
                      type: "string"
                      example: "Unauthorized User"
        404:
          description: There's not a group with the given id
          content: 
            application/json:
              schema:
                  type: object
                  properties: 
                    error:
                      type: "string"
                      example: "Not found"
  /groups/delete:
    delete:
      tags: 
      - groups
      summary: Deletes a recipe from a group
      description: Deletes the recipe with the id passed as a parameter from the group passed as parameter
      operationId: deleteRecipeFromGroup
      parameters:
      - name: groupId
        in: body
        required: true
        schema:
          type: object
          properties: 
            groupId: 
              type: integer
              example: 3
      - name: recipeId
        in: body
        required: true
        schema:
          type: object
          properties: 
            recipeId: 
              type: integer
              example: 3
      responses:
        200:
          description: Successfully deleted the recipe
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example:  3
                  name:
                    type: string
                    example: "Group3"
                  description:
                    type: string
                    example: Description of Group3
                  recipes:
                    type: array
                    example: []
        400:
          description: One of the parameters is wrongfully passed
          content: 
            application/json:
              schema:
                  type: object
                  properties: 
                    error:
                      type: "string"
                      example: "Invalid {parameter}"
        401:
          description: The user is unauthorized to delete from the given group
          content:
            application/json:
              schema: 
                type: object
                properties:
                  error:
                      type: "string"
                      example: "Unauthorized User"
        404:
          description: One of the parameters doesn't correctly correspond
          content:
            application/json:
              schema: 
                type: object
                properties:
                  error:
                      type: "string"
                      example: "{parameter} Not Found"
  /users:
    put:
      tags:
      - users
      summary: Creates a new user
      description: Creates a new user with the parameters passed in the body
      operationId: createUser
      parameters:
      - name: userName
        in: body
        required: true
        schema:
          type: object
          properties: 
            userName: 
              type: string
              example: new user name
      responses:
        200:
          description: Successfully created the user
          content:
            application/json:
              schema:
                type: object
                example: {
                            "userId": 102,
                            "userName": "new user name",
                            "authToken": "2bf89a26-12f2-4444-ab2c-928ef49d27b8"
                          }
        400:
          description: The parameter is wrongfully passed
          content: 
            application/json:
              schema:
                  type: object
                  properties: 
                    error:
                      type: "string"
                      example: "Invalid userName"